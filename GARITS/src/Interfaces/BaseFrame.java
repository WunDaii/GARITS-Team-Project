/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Controllers.UserController;
import DatabasePackage.DBConnect;
import Entities.User;
import Entities.User.UserType;
import Panels.BasePanel;
import Panels.BasePanel.PanelType;
import Panels.ConfigPanel;
import Panels.DatabasePanel;
import Panels.ReportPanel;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JFrame;

/**
 *
 * @author Daven
 */
public class BaseFrame extends javax.swing.JFrame {

    private BufferedImage image;

    /**
     * Creates new form BaseFrame
     */
    public BaseFrame() {
        initComponents();
        imagePanel.setup();
    }

    public void reset() {
        if (tabbedPane.getTabCount() > 0) {
            tabbedPane.removeAll();
        }
    }

    public void setup() {

        User user = DBConnect.sharedInstance().user();

        List<PanelType> types = getArrayForType(user.userType());

        for (PanelType type : types) {
            BasePanel panel = new BasePanel();
            panel.setupType(type);
            String title = type.toString().toLowerCase();
            title = title.replaceAll("_", " ");
            tabbedPane.addTab(toTitleCase(title), panel);
        }

        if (user.userType() == UserType.ADMIN) {
            DatabasePanel dbPanel = new DatabasePanel();
            tabbedPane.addTab("Database Mangaement", dbPanel);

            ConfigPanel configPanel = new ConfigPanel();
            tabbedPane.addTab("Configuration", configPanel);
        } else if (user.userType() == UserType.FRANCHISEE) {
            ReportPanel pPanel = new ReportPanel();
            tabbedPane.addTab("Reports", pPanel);
        }

        this.logoutButton.setText(user.firstName() + " " + user.lastName() + ": Logout");
        String lowercase = user.userType().toString().toLowerCase();
        this.titleLabel.setText(lowercase.substring(0, 1).toUpperCase() + lowercase.substring(1));
    }

    /**
     * Gets a list of PanelTypes for a provided UserType. This decides the
     * permissions for different users.
     *
     * @param userType the UserType of the current logged-in User.
     * @return a list of PanelTypes the User can access.
     * @see PanelType
     * @see User
     * @see UserType
     */
    public List<PanelType> getArrayForType(UserType userType) {
        switch (userType) {
            case ADMIN:
                return Arrays.asList(PanelType.USERS);
            case FOREPERSON:
                return Arrays.asList(PanelType.JOBS, PanelType.PARTS, PanelType.STOCK, PanelType.VEHICLES);

            case RECEPTIONIST:
                return Arrays.asList(PanelType.JOBS, PanelType.PARTS, PanelType.STOCK, PanelType.VEHICLES, PanelType.PART_ORDERS, PanelType.SUPPLIERS);

            case MECHANIC:
                return Arrays.asList(PanelType.JOBS);
            case FRANCHISEE:
                return Arrays.asList(PanelType.CUSTOMERS, PanelType.PARTS, PanelType.STOCK);
            default:
                return new ArrayList<>();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        imagePanel = new Panels.ImagePanel();
        titleLabel = new javax.swing.JLabel();
        logoutButton = new javax.swing.JButton();
        tabbedPane = new javax.swing.JTabbedPane();
        wallpaperButton = new javax.swing.JButton();
        lockButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        imagePanel.setBackground(new java.awt.Color(255, 255, 255));

        titleLabel.setBackground(new java.awt.Color(255, 255, 255));
        titleLabel.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("User");
        titleLabel.setOpaque(true);

        logoutButton.setText("Logout");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        wallpaperButton.setText("Change Wallpaper");
        wallpaperButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wallpaperButtonActionPerformed(evt);
            }
        });

        lockButton.setText("Lock");
        lockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lockButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout imagePanelLayout = new javax.swing.GroupLayout(imagePanel);
        imagePanel.setLayout(imagePanelLayout);
        imagePanelLayout.setHorizontalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titleLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, imagePanelLayout.createSequentialGroup()
                .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(imagePanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(tabbedPane))
                    .addGroup(imagePanelLayout.createSequentialGroup()
                        .addComponent(lockButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(wallpaperButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 353, Short.MAX_VALUE)
                        .addComponent(logoutButton)))
                .addContainerGap())
        );
        imagePanelLayout.setVerticalGroup(
            imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(imagePanelLayout.createSequentialGroup()
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(imagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(logoutButton)
                    .addComponent(wallpaperButton)
                    .addComponent(lockButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(imagePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        // TODO add your handling code here:

        LoginFrame loginFrame = new LoginFrame();
        loginFrame.setVisible(true);

        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_logoutButtonActionPerformed

    /**
     * Allows the user to change the current wallpaper.
     *
     * @param evt the click event from the button.
     */
    private void wallpaperButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wallpaperButtonActionPerformed
        // TODO add your handling code here:

        JFileChooser fc = new JFileChooser("/Users/Daven/Google Drive/Uni/Year 2/Team Project/Implementation/Project/GARTIS/wallpapers");
        int result = fc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            String sname = file.getAbsolutePath(); //THIS WAS THE PROBLEM
            User user = DBConnect.sharedInstance().user();
            user.setWallpaper(sname);
            imagePanel.updateWallpaper();
            new UserController().updateItem(user);
        }
    }//GEN-LAST:event_wallpaperButtonActionPerformed

    /**
     * Hides the currently-active BaseFrame and shows the login window.
     *
     * @param evt the action from clicking the button.
     * @see LoginFrame
     */
    private void lockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lockButtonActionPerformed
        // TODO add your handling code here:

        LoginFrame frame = new LoginFrame();
        frame.setDelegate(this);

        this.setEnabled(false);
        this.setVisible(false);

        frame.setVisible(true);
    }//GEN-LAST:event_lockButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BaseFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BaseFrame().setVisible(true);
            }
        });
    }

    /**
     * Converts a String to Title Case.
     *
     * @param givenString the String to be converted.
     * @return the converted String to Title Case.
     */
    public static String toTitleCase(String givenString) {
        String[] arr = givenString.split(" ");
        StringBuffer sb = new StringBuffer();

        for (int i = 0; i < arr.length; i++) {
            sb.append(Character.toUpperCase(arr[i].charAt(0)))
                    .append(arr[i].substring(1)).append(" ");
        }
        return sb.toString().trim();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Panels.ImagePanel imagePanel;
    private javax.swing.JButton lockButton;
    private javax.swing.JButton logoutButton;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton wallpaperButton;
    // End of variables declaration//GEN-END:variables
}
