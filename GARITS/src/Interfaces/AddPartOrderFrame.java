/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaces;

import Controllers.PartOrderController;
import Delegates.AddInterface;
import Delegates.ItemsInterface;
import Delegates.PaymentInterface;
import Entities.Customer;
import Entities.Item;
import Entities.JobStock;
import Entities.PartOrder;
import Entities.Stock;
import Helpers.ConfigHelper;
import Helpers.PrintHelper;
import Panels.BasePanel;
import TableModels.JobPartsTableModel;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;

/**
 *
 * @author Daven
 */
public class AddPartOrderFrame extends javax.swing.JFrame implements ItemsInterface, AddInterface, PaymentInterface {

    PartOrder order = new PartOrder();
    PartOrderController controller = new PartOrderController();
    JobPartsTableModel partsModel = new JobPartsTableModel();
    BasePanel delegate;
    Double markup = 0.0;
    boolean edit;

    /**
     * Creates new form AddPartOrderFrame
     */
    public AddPartOrderFrame() {
        initComponents();

        partsModel.setDelegate(this);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        this.order.setParts(controller.getStockForPartOrder(order));

        setToToday();

        markup = new ConfigHelper().getMarkupRate();
    }

    public void editOrder(PartOrder order_) {
        this.order = order_;
        edit = true;
        this.customerLabel.setText(order.customer().firstName() + " " + order.customer().lastName());

        if (this.order.date() != null) {
            this.dateTextField.setText(new SimpleDateFormat("dd/MM/yyyy").format(this.order.date()));
        }

        this.costTextLabel.setText("" + order.cost());

        this.order.setParts(controller.getStockForPartOrder(order));
        if (this.order.paid() == true) {
            this.paidCheckBox.setSelected(true);
        }
        titleLabel.setText("Edit Part Order");
        addButton.setText("Update Part Order");
        refreshTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        partsTable = new javax.swing.JTable();
        customerLabel = new javax.swing.JLabel();
        selectCustomerButton = new javax.swing.JButton();
        dateTextField = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        costTextLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        addPartButton = new javax.swing.JButton();
        deletePartButton = new javax.swing.JButton();
        todayButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        paidCheckBox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titleLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        titleLabel.setText("Add Part Order");

        jLabel2.setText("Date:");

        jLabel3.setText("Parts:");

        jLabel4.setText("Customer:");

        partsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(partsTable);

        customerLabel.setText("None");

        selectCustomerButton.setText("Select Customer");
        selectCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectCustomerButtonActionPerformed(evt);
            }
        });

        dateTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd/MM/yyyy"))));

        jLabel6.setText("Cost:");

        costTextLabel.setText("Â£0.00");

        addButton.setText("Add Part Order");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        addPartButton.setText("Add Part");
        addPartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPartButtonActionPerformed(evt);
            }
        });

        deletePartButton.setText("Delete Part");

        todayButton.setText("Set to Today");
        todayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                todayButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Print Invoice");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Pay");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("jCheckBox1");

        paidCheckBox.setText("Paid");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(customerLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectCustomerButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(titleLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(todayButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(paidCheckBox)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(costTextLabel)
                                        .addGap(149, 149, 149)
                                        .addComponent(jCheckBox1)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(addPartButton, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(deletePartButton, javax.swing.GroupLayout.Alignment.TRAILING)))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addButton)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(todayButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(customerLabel)
                            .addComponent(selectCustomerButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addPartButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deletePartButton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(costTextLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paidCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addButton)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addComponent(jCheckBox1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectCustomerButtonActionPerformed
        // TODO add your handling code here:
        SelectFrame frame = new SelectFrame(BasePanel.PanelType.CUSTOMERS, this);
        frame.setVisible(true);
    }//GEN-LAST:event_selectCustomerButtonActionPerformed

    private void addPartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPartButtonActionPerformed
        // TODO add your handling code here:

        SelectFrame frame = new SelectFrame(BasePanel.PanelType.STOCK, this);
        frame.setVisible(true);
    }//GEN-LAST:event_addPartButtonActionPerformed

    private void todayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_todayButtonActionPerformed
        // TODO add your handling code here:
        setToToday();
    }//GEN-LAST:event_todayButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // TODO add your handling code here:

        if (this.dateTextField.getText().length() > 9) {
            try {
                SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
                java.util.Date parsed = format.parse(this.dateTextField.getText());
                java.sql.Date sqlDate = new java.sql.Date(parsed.getTime());
                order.setDate(sqlDate);
            } catch (ParseException ex) {
            }
        }

        order.setParts((List<JobStock>) partsModel.items());
        order.setPaid(this.paidCheckBox.isSelected());

        if (edit) {
            controller.updateItem(order);
        } else {
            controller.addItem(order);
        }

        this.delegate.reset();
    }//GEN-LAST:event_addButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        TakePaymentFrame frame = new TakePaymentFrame();
        frame.setDelegate(this);
        frame.setAmount(order.cost());
        frame.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new PrintHelper().printPartOrderInvoice(order, true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddPartOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddPartOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddPartOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddPartOrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddPartOrderFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton addPartButton;
    private javax.swing.JLabel costTextLabel;
    private javax.swing.JLabel customerLabel;
    private javax.swing.JFormattedTextField dateTextField;
    private javax.swing.JButton deletePartButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox paidCheckBox;
    private javax.swing.JTable partsTable;
    private javax.swing.JButton selectCustomerButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JButton todayButton;
    // End of variables declaration//GEN-END:variables

    @Override
    public void selectedItems(ArrayList<? extends Item> items) {
        System.out.println("selectedItems: " + items.size());
        Item first = items.get(0);

        switch (first.type()) {
            case CUSTOMER:
                Customer customer = (Customer) first;
                this.customerLabel.setText(customer.firstName() + " " + customer.lastName());
                order.setCustomer(customer);
                break;
            case STOCK:
                System.out.println("AddPartOrderFrame > selectedItems > Stock: " + items.size());
                List<JobStock> jobParts = order.parts();

                for (Item item : items) {
                    Stock part = (Stock) item;
                    boolean exists = false;
                    for (JobStock jobPart : jobParts) {

                        if (part.itemNumber().equals(jobPart.itemNumber())) {
                            jobPart.setQuantity(jobPart.quantity() + 1);
                            exists = true;
                            break;
                        }
                    }
                    if (!exists) {
                        System.out.println("Does not exist");
                        JobStock stock = new JobStock(part);
                        stock.setJobQuantity(1);
                        jobParts.add(stock);
                    }
                }

                System.out.println("Selected Parts, number: " + jobParts.size());
                System.out.println("Part number: " + jobParts.get(0).part().number());
                order.setParts(jobParts);
                refreshTable();
                break;
            default:
                break;
        }
    }

    @Override
    public void updatedItems(ArrayList<? extends Item> items) {

        Item first = items.get(0);
        switch (first.type()) {
            case PART:
                order.setParts((List<JobStock>) items);
                refreshTable();
                break;
            default:
                break;
        }
    }

    public void refreshTable() {
        partsModel.setItems(this.order.parts());
        this.partsTable.setModel(partsModel);
        this.partsTable.revalidate();

        Double totalCost = 0.0;

        for (JobStock stock : order.parts()) {
            totalCost = totalCost + (stock.cost() * ((100 + markup) / 100) * stock.jobQuantity());
        }

        order.setCost(totalCost);
        costTextLabel.setText(String.format("Â£%.2f", totalCost));
    }

    @Override
    public void setDelegate(BasePanel panel) {
        this.delegate = panel;
    }

    @Override
    public void editItem(Item item) {
        editOrder((PartOrder) item);
    }

    private void setToToday() {
        java.text.SimpleDateFormat todaysDate
                = new java.text.SimpleDateFormat("dd/MM/yyyy");
        String dateStr = todaysDate.format((java.util.Calendar.getInstance()).getTime());
        this.dateTextField.setText(dateStr);
    }

    @Override
    public void paid() {
        this.paidCheckBox.setSelected(true);
        order.setPaid(true);
    }
}
